syntax = "proto3";

package sixswingchain.tokenfactory;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "sixswingchain/tokenfactory/params.proto";
import "sixswingchain/tokenfactory/denom.proto";

option go_package = "sixswingchain/x/tokenfactory/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/sixswingchain/tokenfactory/params";
  
  }
  
  // Queries a list of Denom items.
  rpc Denom    (QueryGetDenomRequest) returns (QueryGetDenomResponse) {
    option (google.api.http).get = "/sixswingchain/tokenfactory/denom/{denom}";
  
  }
  rpc DenomAll (QueryAllDenomRequest) returns (QueryAllDenomResponse) {
    option (google.api.http).get = "/sixswingchain/tokenfactory/denom";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetDenomRequest {
  string denom = 1;
}

message QueryGetDenomResponse {
  Denom denom = 1 [(gogoproto.nullable) = false];
}

message QueryAllDenomRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDenomResponse {
  repeated Denom                                  denom      = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

